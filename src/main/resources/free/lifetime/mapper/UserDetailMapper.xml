<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="free.lifetime.mapper.UserDetailMapper">
  <resultMap id="BaseResultMap" type="free.lifetime.model.UserDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, uid, email, phone, address, avatar, create_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_detail
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="free.lifetime.model.UserDetail" useGeneratedKeys="true" keyProperty="id">
    insert into t_user_detail (id, uid, email, 
      phone, address, avatar, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="free.lifetime.model.UserDetail" useGeneratedKeys="true" keyProperty="id">
    insert into t_user_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="free.lifetime.model.UserDetail">
    update t_user_detail
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="free.lifetime.model.UserDetail">
    update t_user_detail
    set uid = #{uid,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAvatarByUid" resultType="java.lang.String">
    select avatar
    from t_user_detail
    where uid = #{uid}
  </select>

  <update id="updateAvatarByUid">
    update t_user_detail
    set avatar = #{avatar}
    where uid = #{uid}
  </update>

  <delete id="deleteByUid">
    delete from t_user_detail
    where uid = #{uid}
  </delete>

  <delete id="deleteBatch">
    delete from t_user_detail
    where uid in
    (
    <foreach collection="uidList" item="uid" separator=",">
      #{uid}
    </foreach>
    )
  </delete>

  <select id="selectByUid" resultMap="BaseResultMap">
    select id, email, phone, address, avatar
    from t_user_detail
    where uid = #{uid}
  </select>
</mapper>